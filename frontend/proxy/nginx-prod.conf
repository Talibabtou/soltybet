error_log /var/log/nginx/error.log warn;  # Réduit le niveau de log
access_log off;  # Désactive les logs d'accès par défaut

resolver 127.0.0.11 valid=10s;

upstream backend {
    server backend:8000;
    keepalive 32;
}

server {
	listen 80;
	server_name solty.bet www.solty.bet;
	return 301 https://$server_name$request_uri;
}

server {
	listen 443 ssl;
	server_name solty.bet www.solty.bet;

	ssl_certificate /etc/nginx/ssl/certificate.crt;
	ssl_certificate_key /etc/nginx/ssl/private.key;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;
	ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
	ssl_ecdh_curve secp384r1; # Use a strong curve

    location /api/ {
         # Désactiver les logs d'accès normaux
        access_log off;
        
        # Logger uniquement les erreurs
        error_log /var/log/nginx/api-error.log warn;
        set $backend_upstream http://backend:8000;
        proxy_pass $backend_upstream;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    # location /admin/ {
    #     proxy_pass http://backend/admin/;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $host;
    #     proxy_redirect off;
    # }

    location /ws/ {
        access_log off;
        proxy_pass http://backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;  # Timeout for WebSocket connections

        # Optimisations WebSocket
        proxy_buffering off;
        proxy_cache off;

        # Add these lines to enable SSL termination for WebSocket
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }

    location /static/ {
        access_log off;
        alias /usr/share/nginx/html/backend/;
        expires 30d;  # Cache les fichiers statiques
        add_header Cache-Control "public, no-transform";
    }

    location / {
        access_log off;  # Désactive les logs pour les fichiers frontend
        root /usr/share/nginx/html/frontend/;
        index index.html;
        try_files $uri $uri/ /index.html;
        expires 1h; 
    }  
}

# Add these lines to handle Cloudflare headers
set_real_ip_from 103.21.244.0/22;
set_real_ip_from 103.22.200.0/22;
set_real_ip_from 103.31.4.0/22;
set_real_ip_from 104.16.0.0/13;
set_real_ip_from 104.24.0.0/14;
set_real_ip_from 108.162.192.0/18;
set_real_ip_from 131.0.72.0/22;
set_real_ip_from 141.101.64.0/18;
set_real_ip_from 162.158.0.0/15;
set_real_ip_from 172.64.0.0/13;
set_real_ip_from 173.245.48.0/20;
set_real_ip_from 188.114.96.0/20;
set_real_ip_from 190.93.240.0/20;
set_real_ip_from 197.234.240.0/22;
set_real_ip_from 198.41.128.0/17;
set_real_ip_from 2400:cb00::/32;
set_real_ip_from 2606:4700::/32;
set_real_ip_from 2803:f800::/32;
set_real_ip_from 2405:b500::/32;
set_real_ip_from 2405:8100::/32;
set_real_ip_from 2a06:98c0::/29;
set_real_ip_from 2c0f:f248::/32;

real_ip_header CF-Connecting-IP;